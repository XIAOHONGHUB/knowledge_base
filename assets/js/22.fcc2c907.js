(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{384:function(a,t,s){a.exports=s.p+"assets/img/image-20240923112241735.d6433f3e.png"},385:function(a,t,s){a.exports=s.p+"assets/img/image-20240923113455146.888c5121.png"},386:function(a,t,s){a.exports=s.p+"assets/img/image-20240923114941456.0053c212.png"},387:function(a,t,s){a.exports=s.p+"assets/img/image-20240923115138397.1c4f8ccc.png"},469:function(a,t,s){"use strict";s.r(t);var _=s(8),v=Object(_.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"_1、cache介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、cache介绍"}},[a._v("#")]),a._v(" 1、cache介绍")]),a._v(" "),t("p",[a._v("缓存（Cache）是一种高yi速存储器，用于临时存储经常访问的数据和指令，以减少访问主内存的时间。它位于CPU与主内存之间，能显著提高系统性能。缓存通常分为几级：")]),a._v(" "),t("ol",[t("li",[t("strong",[a._v("L1缓存")]),a._v("：内置于CPU内部，速度最快，但容量较小。")]),a._v(" "),t("li",[t("strong",[a._v("L2缓存")]),a._v("：仍在CPU内部或靠近CPU，速度较快，容量稍大。")]),a._v(" "),t("li",[t("strong",[a._v("L3缓存")]),a._v("：通常共享在多个核心之间，速度较慢但容量更大。")])]),a._v(" "),t("p",[a._v("缓存利用时间局部性和空间局部性原理，存储最近或即将使用的数据，极大提高数据访问效率。")]),a._v(" "),t("p",[t("img",{attrs:{src:s(384),alt:"image-20240923112241735"}})]),a._v(" "),t("h2",{attrs:{id:"_2、cache替换算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、cache替换算法"}},[a._v("#")]),a._v(" 2、cache替换算法")]),a._v(" "),t("ul",[t("li",[a._v("随机替换算法\n"),t("ul",[t("li",[a._v("随机数发生器产生一个要替换的块号，将该块替换出去")])])]),a._v(" "),t("li",[a._v("先进先出算法\n"),t("ul",[t("li",[a._v("最先进入cache的信息块替换出去")])])]),a._v(" "),t("li",[a._v("近期最少使用算法\n"),t("ul",[t("li",[a._v("近期最少使用的cache中的信息块替换出去")])])]),a._v(" "),t("li",[a._v("优化替换算法\n"),t("ul",[t("li",[a._v("先执行一个程序，统计Cahe的替换情况。有了这样的先验信息，在第二次执行该程序时便可以用最有效的方式来替换")])])])]),a._v(" "),t("h2",{attrs:{id:"_3、cache的命中率"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、cache的命中率"}},[a._v("#")]),a._v(" 3、cache的命中率")]),a._v(" "),t("p",[a._v("cache的容量越大，cache的命中率越高")]),a._v(" "),t("p",[t("img",{attrs:{src:s(385),alt:"image-20240923113455146"}})]),a._v(" "),t("h2",{attrs:{id:"_4、cache的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、cache的"}},[a._v("#")]),a._v(" 4、cache的")]),a._v(" "),t("p",[a._v("cache与主存地址的映射是由硬件自动完成的")]),a._v(" "),t("h2",{attrs:{id:"_5、直接映像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、直接映像"}},[a._v("#")]),a._v(" 5、直接映像")]),a._v(" "),t("h3",{attrs:{id:"直接映射-direct-mapping"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#直接映射-direct-mapping"}},[a._v("#")]),a._v(" 直接映射（Direct Mapping）")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("映射方式")]),a._v("：每个主存块仅能映射到缓存中的一个特定位置。")]),a._v(" "),t("li",[t("strong",[a._v("工作原理")]),a._v("：主存地址通过索引部分直接确定缓存行，再通过标签验证数据是否命中。")]),a._v(" "),t("li",[t("strong",[a._v("优缺点")]),a._v("：实现简单，但容易导致冲突，缓存命中率可能较低。")])]),a._v(" "),t("p",[t("img",{attrs:{src:s(386),alt:"image-20240923114941456"}})]),a._v(" "),t("h2",{attrs:{id:"_6、全相联映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、全相联映射"}},[a._v("#")]),a._v(" 6、全相联映射")]),a._v(" "),t("h3",{attrs:{id:"全相联映射-fully-associative-mapping"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全相联映射-fully-associative-mapping"}},[a._v("#")]),a._v(" 全相联映射（Fully Associative Mapping）")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("映射方式")]),a._v("：主存块可以映射到缓存中的任何位置。")]),a._v(" "),t("li",[t("strong",[a._v("工作原理")]),a._v("：访问时，缓存中的所有标签都会被检查，以确认数据是否存在。")]),a._v(" "),t("li",[t("strong",[a._v("优缺点")]),a._v("：灵活性高，命中率通常较好，但硬件复杂度高，成本增加。")])]),a._v(" "),t("p",[t("img",{attrs:{src:s(387),alt:"image-20240923115138397"}})]),a._v(" "),t("h2",{attrs:{id:"_7、组相联映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、组相联映射"}},[a._v("#")]),a._v(" 7、组相联映射")]),a._v(" "),t("h3",{attrs:{id:"组相联映射-set-associative-mapping"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组相联映射-set-associative-mapping"}},[a._v("#")]),a._v(" 组相联映射（Set-Associative Mapping）")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("映射方式")]),a._v("：结合了直接映射和全相联映射的特点，缓存被划分为多个组，每个组包含多个缓存行。")]),a._v(" "),t("li",[t("strong",[a._v("工作原理")]),a._v("：主存块根据索引映射到特定组内，数据可以在组内的任何位置存放，通过标签确认命中。")]),a._v(" "),t("li",[t("strong",[a._v("优缺点")]),a._v("：性能和灵活性较好，冲突较少，但实现复杂度介于直接映射和全相联映射之间。")])])])}),[],!1,null,null,null);t.default=v.exports}}]);