(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{485:function(_,t,v){_.exports=v.p+"assets/img/image-20240923104244907.14d5a18b.png"},844:function(_,t,v){"use strict";v.r(t);var a=v(14),s=Object(a.a)({},(function(){var _=this,t=_._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"一、存储器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、存储器"}},[_._v("#")]),_._v(" 一、存储器")]),_._v(" "),t("p",[t("img",{attrs:{src:v(485),alt:"image-20240923104244907"}})]),_._v(" "),t("p",[_._v("**主存（DRAM）：**动态随机存储器【周期性的刷新】")]),_._v(" "),t("p",[_._v("**Cache（SRAM）：**静态随机存储")]),_._v(" "),t("h3",{attrs:{id:"_1、按存储的工作方式分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、按存储的工作方式分类"}},[_._v("#")]),_._v(" 1、按存储的工作方式分类")]),_._v(" "),t("ul",[t("li",[_._v("读/写存储器（RAM）。它指既能读取数据也能存入数据的存储器")]),_._v(" "),t("li",[_._v("只读存储器：工作过程中仅能读取的存储器，根据数据的写入方式，这种存储器又可以细分为：\n"),t("ul",[t("li",[_._v("ROM")]),_._v(" "),t("li",[_._v("PROM")]),_._v(" "),t("li",[_._v("EPROM")]),_._v(" "),t("li",[_._v("EEPROM")])])])]),_._v(" "),t("h3",{attrs:{id:"_2、按访问方式分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、按访问方式分类"}},[_._v("#")]),_._v(" 2、按访问方式分类")]),_._v(" "),t("ul",[t("li",[_._v("按地址访问的存储器")]),_._v(" "),t("li",[_._v("按内容访问的存储器")])]),_._v(" "),t("h3",{attrs:{id:"_3、按寻址方式分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、按寻址方式分类"}},[_._v("#")]),_._v(" 3、按寻址方式分类")]),_._v(" "),t("ul",[t("li",[_._v("随机存储器\n"),t("ul",[t("li",[_._v("随机存储器是一种可读写的内存，允许数据在任何时刻被随机访问。它的存取时间与访问数据的顺序无关，通常用于存储正在运行的程序和数据。常见类型包括动态随机存取存储器（DRAM）和静态随机存取存储器（SRAM）。")])])]),_._v(" "),t("li",[_._v("顺序存储器\n"),t("ul",[t("li",[_._v("顺序存储器是一种数据存取方式，其中数据按顺序存储和访问。访问某个特定位置的数据时，需要从起始位置逐个读取，直到到达所需位置。常见例子包括磁带存储和某些类型的文件系统，适合存储大量数据但访问速度较慢。")])])]),_._v(" "),t("li",[_._v("直接存储器\n"),t("ul",[t("li",[_._v("直接存储器（如DMA）通常指的是一种数据传输方式，允许外设直接与内存进行数据传输，而不经过CPU。它提高了数据传输效率，减轻了CPU负担，适用于大量数据传输场景。")])])])]),_._v(" "),t("h3",{attrs:{id:"_4、虚拟存储器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、虚拟存储器"}},[_._v("#")]),_._v(" 4、虚拟存储器")]),_._v(" "),t("p",[_._v("虚拟存储器由主存和辅存构成")]),_._v(" "),t("p",[_._v("虚拟存储器（Virtual Memory）是一种内存管理技术，它允许程序使用比物理内存更大的地址空间。虚拟存储器通过将物理内存和硬盘空间结合起来，创建出一个更大的逻辑内存空间，从而提高了系统的灵活性和效率。")]),_._v(" "),t("h4",{attrs:{id:"主要特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主要特点"}},[_._v("#")]),_._v(" 主要特点：")]),_._v(" "),t("ol",[t("li",[t("strong",[_._v("地址空间隔离")]),_._v("：每个进程都有自己的虚拟地址空间，进程之间互不干扰，提高了安全性和稳定性。")]),_._v(" "),t("li",[t("strong",[_._v("分页和分段")]),_._v("：虚拟内存通常采用分页或分段的方式管理，将逻辑地址分为固定大小的页或段，按需加载到物理内存中。")]),_._v(" "),t("li",[t("strong",[_._v("按需加载")]),_._v("：只有在需要时才将页面加载到内存，节省了物理内存的使用。")]),_._v(" "),t("li",[t("strong",[_._v("换页")]),_._v("：当物理内存不足时，操作系统可以将不常用的页面换出到硬盘，腾出空间给新的页面。")])]),_._v(" "),t("h4",{attrs:{id:"优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[_._v("#")]),_._v(" 优点：")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("内存扩展")]),_._v("：程序可以使用超过物理内存限制的地址空间。")]),_._v(" "),t("li",[t("strong",[_._v("提高效率")]),_._v("：可以更有效地利用内存，减少内存碎片。")]),_._v(" "),t("li",[t("strong",[_._v("程序隔离")]),_._v("：提高了系统的安全性和稳定性。")])]),_._v(" "),t("p",[_._v("虚拟存储器是现代操作系统中一个非常重要的概念，广泛应用于各种计算机系统中。")]),_._v(" "),t("h3",{attrs:{id:"_5、时间局部性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、时间局部性"}},[_._v("#")]),_._v(" 5、时间局部性")]),_._v(" "),t("p",[_._v("时间局部性（Temporal Locality）是指程序在某个时间段内访问的数据或指令，可能会在不久后再次被访问。换句话说，如果某个数据被访问过，那么它很可能会在短时间内再次被访问。这一特性常用于缓存设计，以提高访问速度和效率。")]),_._v(" "),t("h3",{attrs:{id:"_6、空间局部性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、空间局部性"}},[_._v("#")]),_._v(" 6、空间局部性")]),_._v(" "),t("p",[_._v("空间局部性（Spatial Locality）指的是程序在访问某个内存地址时，往往会很快访问相邻的内存地址。这意味着如果一个数据块被访问，附近的数据也很可能在不久后被访问。这一特性常用于缓存和预取策略，以提高数据访问效率。")]),_._v(" "),t("h3",{attrs:{id:"_7、相联存储器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、相联存储器"}},[_._v("#")]),_._v(" 7、相联存储器")]),_._v(" "),t("p",[_._v("相联存储器是一种按内容访问的存储器")])])}),[],!1,null,null,null);t.default=s.exports}}]);