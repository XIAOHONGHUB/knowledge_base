(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{375:function(t,_,a){t.exports=a.p+"assets/img/image-20240921002623512.2d6f9f4f.png"},457:function(t,_,a){"use strict";a.r(_);var v=a(8),s=Object(v.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"一、浮点数的公式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、浮点数的公式"}},[t._v("#")]),t._v(" 一、浮点数的公式")]),t._v(" "),_("p",[t._v("N = 2^E * F")]),t._v(" "),_("p",[t._v("E：阶码")]),t._v(" "),_("p",[t._v("F：尾数")]),t._v(" "),_("p",[_("img",{attrs:{src:a(375),alt:"image-20240921002623512"}})]),t._v(" "),_("h2",{attrs:{id:"二、小阶向大阶-损失更少"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、小阶向大阶-损失更少"}},[t._v("#")]),t._v(" 二、小阶向大阶，损失更少")]),t._v(" "),_("h3",{attrs:{id:"_1-精度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-精度"}},[t._v("#")]),t._v(" 1. "),_("strong",[t._v("精度")]),t._v("：")]),t._v(" "),_("ul",[_("li",[t._v("浮点数由三部分组成：符号位、指数部分和尾数部分。尾数的位数是固定的。")]),t._v(" "),_("li",[t._v("当小阶向大阶时，尾数部分的有效位数得以保留，减少了信息损失。")])]),t._v(" "),_("h3",{attrs:{id:"_2-范围"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-范围"}},[t._v("#")]),t._v(" 2. "),_("strong",[t._v("范围")]),t._v("：")]),t._v(" "),_("ul",[_("li",[t._v("浮点数的范围是由指数决定的。小阶数值在小范围内，转向大阶数值时，意味着数值在更广的范围内可以表示。")]),t._v(" "),_("li",[t._v("转换时可能会涉及对数值的缩放，但由于尾数的位数不变，整体的精度损失较小。")])]),t._v(" "),_("h3",{attrs:{id:"_3-舍入误差"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-舍入误差"}},[t._v("#")]),t._v(" 3. "),_("strong",[t._v("舍入误差")]),t._v("：")]),t._v(" "),_("ul",[_("li",[t._v("将小阶数转换为大阶数时，通常会涉及到加权平均，而这种过程会减少舍入误差。")])]),t._v(" "),_("h3",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),_("p",[t._v("因此，小阶向大阶转换时，由于尾数的有效位数保持不变，导致相对精度损失较小。")]),t._v(" "),_("h2",{attrs:{id:"三、浮点数的范围由阶码决定-精度由尾数决定"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、浮点数的范围由阶码决定-精度由尾数决定"}},[t._v("#")]),t._v(" 三、浮点数的范围由阶码决定，精度由尾数决定")]),t._v(" "),_("h3",{attrs:{id:"_1-浮点数的组成"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-浮点数的组成"}},[t._v("#")]),t._v(" 1. "),_("strong",[t._v("浮点数的组成")]),t._v("：")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("符号位")]),t._v("：决定数值是正数还是负数。")]),t._v(" "),_("li",[_("strong",[t._v("阶码")]),t._v("（Exponent）：决定浮点数的范围。")]),t._v(" "),_("li",[_("strong",[t._v("尾数")]),t._v("（Mantissa 或 Significand）：决定浮点数的精度。")])]),t._v(" "),_("h3",{attrs:{id:"_2-范围-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-范围-2"}},[t._v("#")]),t._v(" 2. "),_("strong",[t._v("范围")]),t._v("：")]),t._v(" "),_("ul",[_("li",[t._v("浮点数的阶码决定了它的表示范围。阶码的大小直接影响浮点数可以表示的最小和最大值。")]),t._v(" "),_("li",[t._v("例如，在 IEEE 754 标准中，单精度浮点数的阶码范围为 -126 到 127，这意味着可以表示的数值范围是相对较大的。")])]),t._v(" "),_("h3",{attrs:{id:"_3-精度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-精度"}},[t._v("#")]),t._v(" 3. "),_("strong",[t._v("精度")]),t._v("：")]),t._v(" "),_("ul",[_("li",[t._v("尾数决定了浮点数的精度。尾数部分的位数越多，表示的数字越精确。")]),t._v(" "),_("li",[t._v("对于 IEEE 754 单精度浮点数，尾数有 23 位（加上隐含的 1，总共 24 位），这决定了浮点数在其范围内的精度。")])]),t._v(" "),_("h3",{attrs:{id:"总结-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("阶码")]),t._v("决定了浮点数的范围（可以表示的大小），而"),_("strong",[t._v("尾数")]),t._v("则决定了浮点数的精度（表示的细节）。这样的结构使得浮点数可以在很大范围内灵活地表示各种实数，同时尽量保持精度。")])]),t._v(" "),_("h2",{attrs:{id:"四、规格化就是将绝对值限定到-0-5-1"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、规格化就是将绝对值限定到-0-5-1"}},[t._v("#")]),t._v(" 四、规格化就是将绝对值限定到[0.5,1)")]),t._v(" "),_("h3",{attrs:{id:"规格化的过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#规格化的过程"}},[t._v("#")]),t._v(" 规格化的过程：")]),t._v(" "),_("ol",[_("li",[_("strong",[t._v("尾数部分")]),t._v("：在规格化的浮点数中，尾数通常表示为 1.x1.x1.x，其中 xxx 是尾数的小数部分。这样，尾数的值会在 [1,2)[1, 2)[1,2) 范围内。")]),t._v(" "),_("li",[_("strong",[t._v("阶码调整")]),t._v("：为了确保尾数符合规格化的标准，阶码会相应地进行调整。例如，如果浮点数在计算过程中变成了非规格化（如小于 0.5），则需要调整阶码使其重新进入规格化范围。")])]),t._v(" "),_("h3",{attrs:{id:"为什么要规格化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要规格化"}},[t._v("#")]),t._v(" 为什么要规格化：")]),t._v(" "),_("ul",[_("li",[t._v("规格化使得浮点数在存储和计算时更高效，能够利用尾数的每一位来增加精度。")]),t._v(" "),_("li",[t._v("通过规范化，浮点数的表示可以更一致，从而减少表示的冗余，提升数值计算的准确性。")])]),t._v(" "),_("h3",{attrs:{id:"非规格化数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#非规格化数"}},[t._v("#")]),t._v(" 非规格化数：")]),t._v(" "),_("p",[t._v("当数值非常小，导致尾数无法保持在规格化范围内时，可能会出现非规格化数（denormalized numbers），此时尾数的绝对值会落在 [0,0.5)[0, 0.5)[0,0.5) 的范围内。")])])}),[],!1,null,null,null);_.default=s.exports}}]);