(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{354:function(t,s,a){t.exports=a.p+"assets/img/image-20240921110440624.4f90be1e.png"},355:function(t,s,a){t.exports=a.p+"assets/img/image-20240921110826607.4a6a456e.png"},356:function(t,s,a){t.exports=a.p+"assets/img/image-20240921111117557.10e153e3.png"},357:function(t,s,a){t.exports=a.p+"assets/img/image-20240921111400519.3f87830b.png"},358:function(t,s,a){t.exports=a.p+"assets/img/image-20240921111540833.9e7f649d.png"},359:function(t,s,a){t.exports=a.p+"assets/img/image-20240921121432604.90ea3a12.png"},360:function(t,s,a){t.exports=a.p+"assets/img/image-20240921120416932.9d2428bc.png"},361:function(t,s,a){t.exports=a.p+"assets/img/image-20240922180205396.818c2a43.png"},362:function(t,s,a){t.exports=a.p+"assets/img/image-20240921121603833.c9f3f4a8.png"},363:function(t,s,a){t.exports=a.p+"assets/img/image-20240921121810119.b585f78b.png"},364:function(t,s,a){t.exports=a.p+"assets/img/image-20240921121853991.b93be619.png"},365:function(t,s,a){t.exports=a.p+"assets/img/image-20240921121940893.ae217095.png"},366:function(t,s,a){t.exports=a.p+"assets/img/image-20240921122531399.f937bb18.png"},367:function(t,s,a){t.exports=a.p+"assets/img/image-20240921120256044.48430e44.png"},368:function(t,s,a){t.exports=a.p+"assets/img/image-20240921122657101.6ff7d1e3.png"},443:function(t,s,a){"use strict";a.r(s);var r=a(8),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、配置寄存器开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、配置寄存器开发"}},[t._v("#")]),t._v(" 一、配置寄存器开发")]),t._v(" "),s("h3",{attrs:{id:"_1、新建工程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、新建工程"}},[t._v("#")]),t._v(" 1、新建工程")]),t._v(" "),s("p",[s("img",{attrs:{src:a(354),alt:"image-20240921110440624"}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(355),alt:"image-20240921110826607"}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(356),alt:"image-20240921111117557"}})]),t._v(" "),s("h3",{attrs:{id:"_2、放置工程所需要的文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、放置工程所需要的文件"}},[t._v("#")]),t._v(" 2、放置工程所需要的文件")]),t._v(" "),s("p",[s("img",{attrs:{src:a(357),alt:"image-20240921111400519"}}),t._v("\n./assets/\n"),s("img",{attrs:{src:a(358),alt:"image-20240921111540833"}})]),t._v(" "),s("h3",{attrs:{id:"_1-start-文件夹"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-start-文件夹"}},[t._v("#")]),t._v(" 1. "),s("strong",[t._v("Start 文件夹")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("这个文件夹通常包含由 STM32CubeMX 生成的初始化代码和配置文件。这些代码负责设置系统时钟、外设以及其他硬件配置，是项目的基础结构。")])]),t._v(" "),s("h3",{attrs:{id:"_2-library-文件夹"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-library-文件夹"}},[t._v("#")]),t._v(" 2. "),s("strong",[t._v("Library 文件夹")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("该文件夹通常包含 STM32 HAL（硬件抽象层）库或其他标准外设库。它们提供了一系列用于控制和操作 STM32 外设的函数，方便开发者进行硬件控制。")])]),t._v(" "),s("h3",{attrs:{id:"_3-user-文件夹"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-user-文件夹"}},[t._v("#")]),t._v(" 3. "),s("strong",[t._v("User 文件夹")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("User")]),t._v(" 文件夹一般用于存放用户自定义的代码，包括应用程序逻辑、任务、驱动程序等。开发者在这里编写具体的业务逻辑，使用 "),s("code",[t._v("Start")]),t._v(" 和 "),s("code",[t._v("Library")]),t._v(" 中的功能。")])]),t._v(" "),s("h3",{attrs:{id:"_3、将文件夹里面的内容-导入到软件的工程文件下-导入文件和我一致"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、将文件夹里面的内容-导入到软件的工程文件下-导入文件和我一致"}},[t._v("#")]),t._v(" 3、将文件夹里面的内容，导入到软件的工程文件下，导入文件和我一致")]),t._v(" "),s("p",[s("img",{attrs:{src:a(359),alt:"image-20240921121432604"}})]),t._v(" "),s("h3",{attrs:{id:"_4、设置工程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、设置工程"}},[t._v("#")]),t._v(" 4、设置工程")]),t._v(" "),s("p",[s("img",{attrs:{src:a(360),alt:"image-20240921120416932"}})]),t._v(" "),s("p",[t._v("ST-Link Debugger 是 STMicroelectronics 提供的一种调试和编程工具，广泛用于 STM32 系列微控制器。它的主要功能和特点包括：")]),t._v(" "),s("h3",{attrs:{id:"主要功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要功能"}},[t._v("#")]),t._v(" 主要功能")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("编程")]),t._v("：\n"),s("ul",[s("li",[t._v("ST-Link 可以将编译后的固件（.bin 或 .hex 文件）烧录到 STM32 微控制器的闪存中。")])])]),t._v(" "),s("li",[s("strong",[t._v("调试")]),t._v("：\n"),s("ul",[s("li",[t._v("支持单步调试、断点设置、变量监视等功能，允许开发者实时观察和修改程序的执行状态。")]),t._v(" "),s("li",[t._v("可以通过 JTAG 或 SWD 接口与 MCU 进行连接，提供更高效的调试体验。")])])]),t._v(" "),s("li",[s("strong",[t._v("仿真")]),t._v("：\n"),s("ul",[s("li",[t._v("通过调试器，可以在运行时模拟外设和其他系统行为，帮助开发者快速发现和修复问题。")])])])]),t._v(" "),s("h3",{attrs:{id:"连接方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接方式"}},[t._v("#")]),t._v(" 连接方式")]),t._v(" "),s("ul",[s("li",[t._v("ST-Link 调试器通常通过 USB 接口连接到开发计算机，并通过 SWD 或 JTAG 接口连接到 STM32 微控制器。")])]),t._v(" "),s("h3",{attrs:{id:"兼容性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#兼容性"}},[t._v("#")]),t._v(" 兼容性")]),t._v(" "),s("ul",[s("li",[t._v("ST-Link 兼容大部分 STM32 微控制器，并可与多种开发环境（如 STM32CubeIDE、Keil MDK、IAR Embedded Workbench 等）配合使用。")])]),t._v(" "),s("h3",{attrs:{id:"使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("开发")]),t._v("：在开发过程中，使用 ST-Link 进行代码的调试和测试。")]),t._v(" "),s("li",[s("strong",[t._v("量产")]),t._v("：在生产过程中，可以利用 ST-Link 对 MCU 进行批量编程。")])]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("ST-Link Debugger 是一个强大的工具，极大地提高了 STM32 微控制器开发的效率和便利性。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(361),alt:"image-20240922180205396"}})]),t._v(" "),s("h3",{attrs:{id:"_5、测试如何把程序-烧录进stm32中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、测试如何把程序-烧录进stm32中"}},[t._v("#")]),t._v(" 5、测试如何把程序，烧录进stm32中")]),t._v(" "),s("p",[s("img",{attrs:{src:a(362),alt:"image-20240921121603833"}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(363),alt:"image-20240921121810119"}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(364),alt:"image-20240921121853991"}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(365),alt:"image-20240921121940893"}})]),t._v(" "),s("h2",{attrs:{id:"二、配置库函数开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、配置库函数开发"}},[t._v("#")]),t._v(" 二、配置库函数开发")]),t._v(" "),s("h3",{attrs:{id:"_1、导入库函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、导入库函数"}},[t._v("#")]),t._v(" 1、导入库函数")]),t._v(" "),s("p",[s("img",{attrs:{src:a(366),alt:"image-20240921122531399"}})]),t._v(" "),s("h2",{attrs:{id:"_2、调整设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、调整设置"}},[t._v("#")]),t._v(" 2、调整设置")]),t._v(" "),s("p",[s("img",{attrs:{src:a(367),alt:"image-20240921120256044"}})]),t._v(" "),s("p",[s("code",[t._v("USE_STDPERIPH_DRIVER")]),t._v(" 是一个在 STM32 项目中常见的宏定义，用于选择是否使用标准外设库（Standard Peripheral Library）。具体来说：")]),t._v(" "),s("h3",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("启用标准外设驱动")]),t._v("：当定义了 "),s("code",[t._v("USE_STDPERIPH_DRIVER")]),t._v("，项目会使用 STM32 的标准外设库函数来控制和配置外设。")]),t._v(" "),s("li",[s("strong",[t._v("禁用标准外设驱动")]),t._v("：如果不定义这个宏，通常意味着项目将使用 HAL 库（硬件抽象层）或直接寄存器操作。")])]),t._v(" "),s("h3",{attrs:{id:"使用场景-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用场景-2"}},[t._v("#")]),t._v(" 使用场景")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("兼容性")]),t._v("：在一些旧的 STM32 项目中，可能使用标准外设库，这个宏的存在使得开发者能够选择继续使用它。")]),t._v(" "),s("li",[s("strong",[t._v("选择库")]),t._v("：开发者可以根据需求选择使用不同的库，提升代码的灵活性。")])]),t._v(" "),s("h3",{attrs:{id:"总结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("通过定义或不定义 "),s("code",[t._v("USE_STDPERIPH_DRIVER")]),t._v("，开发者可以方便地控制项目中使用的库类型。")]),t._v(" "),s("h3",{attrs:{id:"_3、编写程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、编写程序"}},[t._v("#")]),t._v(" 3、编写程序")]),t._v(" "),s("div",{staticClass:"language-C line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stm32f10x.h"')]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Device header")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RCC_APB2PeriphClockCmd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RCC_APB2Periph_GPIOC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ENABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tGPIO_InitTypeDef GPIO_InitStructure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tGPIO_InitStructure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_Mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_Mode_Out_PP"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tGPIO_InitStructure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_Pin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_Pin_13"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tGPIO_InitStructure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_Speed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_Speed_50MHz"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_Init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("GPIO_InitStructure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//GPIO_SetBits(GPIOC,GPIO_Pin_13);")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_ResetBits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIOC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("GPIO_Pin_13"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h3",{attrs:{id:"_3、编译运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、编译运行"}},[t._v("#")]),t._v(" 3、编译运行")]),t._v(" "),s("p",[s("img",{attrs:{src:a(368),alt:"image-20240921122657101"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);